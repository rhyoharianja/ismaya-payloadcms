/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    pages: Page;
    positions: Position;
    locations: Location;
    careers: Career;
    categories: Category;
    news: News;
    events: Event;
    brands: Brand;
    menus: Menu;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    positions: PositionsSelect<false> | PositionsSelect<true>;
    locations: LocationsSelect<false> | LocationsSelect<true>;
    careers: CareersSelect<false> | CareersSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    news: NewsSelect<false> | NewsSelect<true>;
    events: EventsSelect<false> | EventsSelect<true>;
    brands: BrandsSelect<false> | BrandsSelect<true>;
    menus: MenusSelect<false> | MenusSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    'site-configuration': SiteConfiguration;
  };
  globalsSelect: {
    'site-configuration': SiteConfigurationSelect<false> | SiteConfigurationSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  avatar?: (number | null) | Media;
  roles?: ('admin' | 'webAdmin' | 'editor' | 'user')[] | null;
  active?: boolean | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  headline: string;
  slug?: string | null;
  tagline: string;
  status: 'draft' | 'request-review' | 'on-review' | 'publish' | 'unpublish' | 'schedule';
  startDateTime?: string | null;
  endDateTime?: string | null;
  menu?: (number | null) | Menu;
  blocks?:
    | (
        | {
            headline: string;
            tagline: string;
            image: number | Media;
            content: {
              root: {
                type: string;
                children: {
                  type: any;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            contentPosition: 'left' | 'right';
            brands?: (number | Brand)[] | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'cards';
          }
        | {
            headline: string;
            tagline: string;
            content: {
              root: {
                type: string;
                children: {
                  type: any;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            backgroundImage: number | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'heroes';
          }
        | {
            headline: string;
            tagline: string;
            background?: (number | null) | Media;
            items: {
              value: string;
              text: string;
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'milestones';
          }
        | {
            headline: string;
            tagline: string;
            images: {
              image: number | Media;
              id?: string | null;
            }[];
            style: 'grid' | 'carousel' | 'masonry';
            id?: string | null;
            blockName?: string | null;
            blockType: 'galleries';
          }
        | {
            title: string;
            content: {
              root: {
                type: string;
                children: {
                  type: any;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'texts';
          }
        | {
            headline: string;
            tagline: string;
            collection: 'pages' | 'careers' | 'news' | 'events' | 'brands';
            relation?:
              | (
                  | {
                      relationTo: 'pages';
                      value: number | Page;
                    }
                  | {
                      relationTo: 'careers';
                      value: number | Career;
                    }
                  | {
                      relationTo: 'news';
                      value: number | News;
                    }
                  | {
                      relationTo: 'events';
                      value: number | Event;
                    }
                  | {
                      relationTo: 'brands';
                      value: number | Brand;
                    }
                )[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'carousel';
          }
        | {
            headline: string;
            tagline: string;
            collection: 'pages' | 'careers' | 'news' | 'events' | 'brands';
            relation?:
              | (
                  | {
                      relationTo: 'pages';
                      value: number | Page;
                    }
                  | {
                      relationTo: 'careers';
                      value: number | Career;
                    }
                  | {
                      relationTo: 'news';
                      value: number | News;
                    }
                  | {
                      relationTo: 'events';
                      value: number | Event;
                    }
                  | {
                      relationTo: 'brands';
                      value: number | Brand;
                    }
                )[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'slider';
          }
      )[]
    | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    canonicalUrl?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "menus".
 */
export interface Menu {
  id: number;
  title: string;
  parent?: (number | null) | Menu;
  path?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "brands".
 */
export interface Brand {
  id: number;
  headline: string;
  tagline: string;
  status: boolean;
  menu?: (number | null) | Menu;
  blocks?:
    | (
        | {
            headline: string;
            tagline: string;
            content: {
              root: {
                type: string;
                children: {
                  type: any;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            backgroundImage: number | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'heroes';
          }
        | {
            headline: string;
            tagline: string;
            images: {
              image: number | Media;
              id?: string | null;
            }[];
            style: 'grid' | 'carousel' | 'masonry';
            id?: string | null;
            blockName?: string | null;
            blockType: 'galleries';
          }
        | {
            headline: string;
            tagline: string;
            collection: 'pages' | 'careers' | 'news' | 'events' | 'brands';
            relation?:
              | (
                  | {
                      relationTo: 'pages';
                      value: number | Page;
                    }
                  | {
                      relationTo: 'careers';
                      value: number | Career;
                    }
                  | {
                      relationTo: 'news';
                      value: number | News;
                    }
                  | {
                      relationTo: 'events';
                      value: number | Event;
                    }
                  | {
                      relationTo: 'brands';
                      value: number | Brand;
                    }
                )[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'slider';
          }
        | {
            title: string;
            content: {
              root: {
                type: string;
                children: {
                  type: any;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'texts';
          }
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "careers".
 */
export interface Career {
  id: number;
  title: string;
  description: string;
  qualification: string;
  position: number | Position;
  location: (number | Location)[];
  active?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "positions".
 */
export interface Position {
  id: number;
  name: string;
  description: string;
  active?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "locations".
 */
export interface Location {
  id: number;
  name: string;
  description: string;
  active?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "news".
 */
export interface News {
  id: number;
  headline: string;
  tagline?: string | null;
  image?: (number | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  active: boolean;
  categories?: (number | Category)[] | null;
  menu?: (number | null) | Menu;
  blocks?:
    | (
        | {
            headline: string;
            tagline: string;
            content: {
              root: {
                type: string;
                children: {
                  type: any;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            backgroundImage: number | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'heroes';
          }
        | {
            headline: string;
            tagline: string;
            images: {
              image: number | Media;
              id?: string | null;
            }[];
            style: 'grid' | 'carousel' | 'masonry';
            id?: string | null;
            blockName?: string | null;
            blockType: 'galleries';
          }
        | {
            headline: string;
            tagline: string;
            collection: 'pages' | 'careers' | 'news' | 'events' | 'brands';
            relation?:
              | (
                  | {
                      relationTo: 'pages';
                      value: number | Page;
                    }
                  | {
                      relationTo: 'careers';
                      value: number | Career;
                    }
                  | {
                      relationTo: 'news';
                      value: number | News;
                    }
                  | {
                      relationTo: 'events';
                      value: number | Event;
                    }
                  | {
                      relationTo: 'brands';
                      value: number | Brand;
                    }
                )[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'slider';
          }
        | {
            title: string;
            content: {
              root: {
                type: string;
                children: {
                  type: any;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'texts';
          }
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  title: string;
  description?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events".
 */
export interface Event {
  id: number;
  headline: string;
  tagline?: string | null;
  image?: (number | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  startDate: string;
  endDate: string;
  active: boolean;
  menu?: (number | null) | Menu;
  blocks?:
    | (
        | {
            headline: string;
            tagline: string;
            content: {
              root: {
                type: string;
                children: {
                  type: any;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            backgroundImage: number | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'heroes';
          }
        | {
            headline: string;
            tagline: string;
            images: {
              image: number | Media;
              id?: string | null;
            }[];
            style: 'grid' | 'carousel' | 'masonry';
            id?: string | null;
            blockName?: string | null;
            blockType: 'galleries';
          }
        | {
            headline: string;
            tagline: string;
            collection: 'pages' | 'careers' | 'news' | 'events' | 'brands';
            relation?:
              | (
                  | {
                      relationTo: 'pages';
                      value: number | Page;
                    }
                  | {
                      relationTo: 'careers';
                      value: number | Career;
                    }
                  | {
                      relationTo: 'news';
                      value: number | News;
                    }
                  | {
                      relationTo: 'events';
                      value: number | Event;
                    }
                  | {
                      relationTo: 'brands';
                      value: number | Brand;
                    }
                )[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'slider';
          }
        | {
            title: string;
            content: {
              root: {
                type: string;
                children: {
                  type: any;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'texts';
          }
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'positions';
        value: number | Position;
      } | null)
    | ({
        relationTo: 'locations';
        value: number | Location;
      } | null)
    | ({
        relationTo: 'careers';
        value: number | Career;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'news';
        value: number | News;
      } | null)
    | ({
        relationTo: 'events';
        value: number | Event;
      } | null)
    | ({
        relationTo: 'brands';
        value: number | Brand;
      } | null)
    | ({
        relationTo: 'menus';
        value: number | Menu;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  avatar?: T;
  roles?: T;
  active?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  headline?: T;
  slug?: T;
  tagline?: T;
  status?: T;
  startDateTime?: T;
  endDateTime?: T;
  menu?: T;
  blocks?:
    | T
    | {
        cards?:
          | T
          | {
              headline?: T;
              tagline?: T;
              image?: T;
              content?: T;
              contentPosition?: T;
              brands?: T;
              id?: T;
              blockName?: T;
            };
        heroes?:
          | T
          | {
              headline?: T;
              tagline?: T;
              content?: T;
              backgroundImage?: T;
              id?: T;
              blockName?: T;
            };
        milestones?:
          | T
          | {
              headline?: T;
              tagline?: T;
              background?: T;
              items?:
                | T
                | {
                    value?: T;
                    text?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        galleries?:
          | T
          | {
              headline?: T;
              tagline?: T;
              images?:
                | T
                | {
                    image?: T;
                    id?: T;
                  };
              style?: T;
              id?: T;
              blockName?: T;
            };
        texts?:
          | T
          | {
              title?: T;
              content?: T;
              id?: T;
              blockName?: T;
            };
        carousel?:
          | T
          | {
              headline?: T;
              tagline?: T;
              collection?: T;
              relation?: T;
              id?: T;
              blockName?: T;
            };
        slider?:
          | T
          | {
              headline?: T;
              tagline?: T;
              collection?: T;
              relation?: T;
              id?: T;
              blockName?: T;
            };
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
        canonicalUrl?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "positions_select".
 */
export interface PositionsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  active?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "locations_select".
 */
export interface LocationsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  active?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "careers_select".
 */
export interface CareersSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  qualification?: T;
  position?: T;
  location?: T;
  active?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "news_select".
 */
export interface NewsSelect<T extends boolean = true> {
  headline?: T;
  tagline?: T;
  image?: T;
  content?: T;
  active?: T;
  categories?: T;
  menu?: T;
  blocks?:
    | T
    | {
        heroes?:
          | T
          | {
              headline?: T;
              tagline?: T;
              content?: T;
              backgroundImage?: T;
              id?: T;
              blockName?: T;
            };
        galleries?:
          | T
          | {
              headline?: T;
              tagline?: T;
              images?:
                | T
                | {
                    image?: T;
                    id?: T;
                  };
              style?: T;
              id?: T;
              blockName?: T;
            };
        slider?:
          | T
          | {
              headline?: T;
              tagline?: T;
              collection?: T;
              relation?: T;
              id?: T;
              blockName?: T;
            };
        texts?:
          | T
          | {
              title?: T;
              content?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events_select".
 */
export interface EventsSelect<T extends boolean = true> {
  headline?: T;
  tagline?: T;
  image?: T;
  content?: T;
  startDate?: T;
  endDate?: T;
  active?: T;
  menu?: T;
  blocks?:
    | T
    | {
        heroes?:
          | T
          | {
              headline?: T;
              tagline?: T;
              content?: T;
              backgroundImage?: T;
              id?: T;
              blockName?: T;
            };
        galleries?:
          | T
          | {
              headline?: T;
              tagline?: T;
              images?:
                | T
                | {
                    image?: T;
                    id?: T;
                  };
              style?: T;
              id?: T;
              blockName?: T;
            };
        slider?:
          | T
          | {
              headline?: T;
              tagline?: T;
              collection?: T;
              relation?: T;
              id?: T;
              blockName?: T;
            };
        texts?:
          | T
          | {
              title?: T;
              content?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "brands_select".
 */
export interface BrandsSelect<T extends boolean = true> {
  headline?: T;
  tagline?: T;
  status?: T;
  menu?: T;
  blocks?:
    | T
    | {
        heroes?:
          | T
          | {
              headline?: T;
              tagline?: T;
              content?: T;
              backgroundImage?: T;
              id?: T;
              blockName?: T;
            };
        galleries?:
          | T
          | {
              headline?: T;
              tagline?: T;
              images?:
                | T
                | {
                    image?: T;
                    id?: T;
                  };
              style?: T;
              id?: T;
              blockName?: T;
            };
        slider?:
          | T
          | {
              headline?: T;
              tagline?: T;
              collection?: T;
              relation?: T;
              id?: T;
              blockName?: T;
            };
        texts?:
          | T
          | {
              title?: T;
              content?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "menus_select".
 */
export interface MenusSelect<T extends boolean = true> {
  title?: T;
  parent?: T;
  path?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-configuration".
 */
export interface SiteConfiguration {
  id: number;
  logo: number | Media;
  favicon: number | Media;
  siteName: string;
  baseUrl: string;
  headline: string;
  tagline: string;
  primary_color?: string | null;
  secondary_color?: string | null;
  success_color?: string | null;
  warning_color?: string | null;
  danger_color?: string | null;
  info_color?: string | null;
  title?: string | null;
  description?: string | null;
  /**
   * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
   */
  image?: (number | null) | Media;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-configuration_select".
 */
export interface SiteConfigurationSelect<T extends boolean = true> {
  logo?: T;
  favicon?: T;
  siteName?: T;
  baseUrl?: T;
  headline?: T;
  tagline?: T;
  primary_color?: T;
  secondary_color?: T;
  success_color?: T;
  warning_color?: T;
  danger_color?: T;
  info_color?: T;
  title?: T;
  description?: T;
  image?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}